import{_ as o,r as p,a as c,b as n,d as t,F as l,e as s,c as e,o as i}from"./app.a7765116.js";const r={},u=n("h1",{id:"setup",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#setup","aria-hidden":"true"},"#"),s(" Setup")],-1),d=n("h2",{id:"prerequisites",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),s(" Prerequisites")],-1),b=s("Vue 3 Gettext provides scripts to automatically extract translation messages into gettext "),h={href:"https://www.gnu.org/software/gettext/manual/html_node/PO-Files.html",target:"_blank",rel:"noopener noreferrer"},k=s("PO files"),g=s(" and, after translation, merge those into a JSON file that can be used in your application. You must install the GNU gettext utilities for those scripts to work:"),m=e(`<p><strong>Ubuntu/Linux:</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> gettext
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>macOS:</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>brew <span class="token function">install</span> gettext
brew <span class="token function">link</span> --force gettext
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>Windows:</strong></p>`,5),_=s("On Windows, you have multiple options. You can run the scripts and install gettext under WSL2 like you would with regular Ubuntu (recommended) or install gettext via mingw64 or cygwin. You may also find precompiled binaries "),f={href:"https://mlocati.github.io/articles/gettext-iconv-windows.html",target:"_blank",rel:"noopener noreferrer"},x=s("here"),v=s("."),q=e(`<h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>Install Vue 3 Gettext using <code>npm</code> or <code>yarn</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i @jshmrtn/vue3-gettext@next
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  input<span class="token operator">:</span> <span class="token punctuation">{</span>
    path<span class="token operator">:</span> <span class="token string">&quot;./docs/.vuepress&quot;</span><span class="token punctuation">,</span>
    include<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;**/*.html&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;**/*.vue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    exclude<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  output<span class="token operator">:</span> <span class="token punctuation">{</span>
    path<span class="token operator">:</span> <span class="token string">&quot;./docs/language&quot;</span><span class="token punctuation">,</span>
    locales<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;en_GB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fr_FR&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;it_IT&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    flat<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    linguas<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,5);function w(y,O){const a=p("OutboundLink");return i(),c(l,null,[u,d,n("p",null,[b,n("a",h,[k,t(a)]),g]),m,n("p",null,[_,n("a",f,[x,t(a)]),v]),q],64)}var V=o(r,[["render",w]]);export{V as default};
